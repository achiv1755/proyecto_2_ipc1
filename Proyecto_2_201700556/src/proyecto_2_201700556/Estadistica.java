/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_2_201700556;

import javax.swing.table.DefaultTableModel;
import proyecto_2_201700556.dinamico.Login;

/**
 *
 * @author juare
 */
public class Estadistica extends javax.swing.JFrame {
  String Semestre="";
  String year="";
  String estado="";
  int contador_cursos=0;
  Semestre semestre_requerido;
  String info[][]=new String [99][7];
  int estado_2=0;
  DefaultTableModel tabla_1 ;
   
    public Estadistica() {
        initComponents();
         tabla_vacia();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        combo_semestree = new javax.swing.JComboBox<>();
        combo_year = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        combo_estado = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESTADISITCAS");
        setLocation(new java.awt.Point(100, 50));
        setResizable(false);

        jLabel1.setText("ESTADISTICAS");

        jLabel2.setText("LOG OUT");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setText("REGRESAR");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        combo_semestree.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"","Primer Semestre","Segundo Semestre" }));
        combo_semestree.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_semestreeItemStateChanged(evt);
            }
        });
        combo_semestree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_semestreeActionPerformed(evt);
            }
        });

        combo_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ""}));
        combo_year.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_yearItemStateChanged(evt);
            }
        });

        jLabel4.setText("SEMESTRE");

        jLabel5.setText("AÃ‘O");

        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "","Aprobado","Reprobado","Ambos" }));
        combo_estado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combo_estadoItemStateChanged(evt);
            }
        });

        jLabel6.setText("ESTADO DE CURSOS");

        jButton1.setText("BUSCAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(combo_semestree, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(combo_year, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel4)
                                .addGap(136, 136, 136)
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(jButton1)))
                        .addGap(0, 254, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_semestree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        for (int i = 17; i < 26; i++) {

            combo_year.addItem("20" + i);
        }

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_semestreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_semestreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_semestreeActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

          setVisible(false);
            Login login = new Login();
            login.buscar();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
 setVisible(false);
Admin e=new Admin();
e.add();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void combo_semestreeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_semestreeItemStateChanged
        
            Semestre = (String) combo_semestree.getSelectedItem();
            
 
        
        
        
    }//GEN-LAST:event_combo_semestreeItemStateChanged

    private void combo_yearItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_yearItemStateChanged
         
               
        year=(String)combo_year.getSelectedItem();
   
 
    }//GEN-LAST:event_combo_yearItemStateChanged

    private void combo_estadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combo_estadoItemStateChanged
    
   
        estado=(String)combo_estado.getSelectedItem();
             switch (estado) {
              case "Aprobado":
                  //System.out.println("aprobado");
                  estado_2=1;
                  break;
              case "Reprobado":
                  //System.out.println("reprobado");
                  estado_2=2;
                  break;
              case "Ambos":
                  //System.out.println("ambos");
                  estado_2=3;
                  break;
                case"":
                  estado_2=0;
                  break;
          }
               
 
        
       
        
        
    }//GEN-LAST:event_combo_estadoItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           contador_cursos=0;
           tabla_vacia();
                 
           
           
           
           
                 if(!"".equals(Semestre)&&!"".equals(year)&&!"".equals(estado))
                 { // si tienen datos 
                        contador_cursos=0;
          
                        recorer_estudiantes();
                    if (contador_cursos!=0)
                     {
                     tabla_llena();    
                     }
                 }else
                 {
                 tabla_vacia();
                 }
                
                
    }//GEN-LAST:event_jButton1ActionPerformed
 
    public static void estadistica() {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estadistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estadistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estadistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estadistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estadistica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> combo_estado;
    private javax.swing.JComboBox<String> combo_semestree;
    private javax.swing.JComboBox<String> combo_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
public void tabla_vacia()
{
String data[][] = new String[0][7];
    String tituloo[] = {"No.", "Carnet", "Nombre","Curso", "Nota", "Estado"};
    tabla_1=new DefaultTableModel(data, tituloo)
                 
          {
            @Override
            public boolean isCellEditable(int filas, int columna) {
                if (columna >= 0) {
                    return false;
                }
                return super.isCellEditable(filas, columna);
            }
        };this.tabla.setModel(tabla_1);
        }



private void recorer_estudiantes()
{
Estudiante aux_estudiante=Archivo.estudiante_primero;
    if (aux_estudiante==null)
    {
         
      //  tabla_vacia();
    }else
    {
        //recorer cada estudiante
        do {
            
            //recorrer cada semestre 
            recorer_semestre(aux_estudiante);
            aux_estudiante=aux_estudiante.siguiente;
        } while (aux_estudiante!=Archivo.estudiante_primero&&Archivo.estudiante_primero!=Archivo.estudiante_ultimo);
        
    
    
    
    }
    


}
private void recorer_semestre(Estudiante estudiante_actual)
{
  Semestre aux_semestre=estudiante_actual.primer_semestre;
    if (aux_semestre==null)
    {
        //tabla_vacia();
    }else
    {
    //recorer cada semestre
        do {
            if (aux_semestre.getSemestre().equalsIgnoreCase(Semestre)&&aux_semestre.getYear().equalsIgnoreCase(year))
            {
                //si se encontro el semestre que se busca     
                // recorer cada curso
                recorer_curso(aux_semestre,estudiante_actual);
                
            }
            aux_semestre=aux_semestre.siguiente_semestre;
        } while (aux_semestre!=estudiante_actual.primer_semestre&&estudiante_actual.primer_semestre!=estudiante_actual.ultimo_semestre);
        
    
    }



}
private void recorer_curso(Semestre semestre_actual,Estudiante estudiante_actual)
{
Curso aux_curso=semestre_actual.primer_curso;
Estudiante aux_estudiante=estudiante_actual;
    if (aux_curso==null) 
    {}else
    {
    //recorer todos los cursos 
        do {
            switch (estado_2) {
                case 1:
                    //aprobado
                    if (aux_curso.isEstado())
                    {
                        info[contador_cursos][0]=""+(1+contador_cursos);
                        info[contador_cursos][1]=aux_estudiante.getCarnet();
                        info[contador_cursos][2]=aux_estudiante.getNombre();
                             info[contador_cursos][3]=""+aux_curso.getNombre();
                        info[contador_cursos][4]=""+aux_curso.getNota();
                        info[contador_cursos][5]="Aprobado";
                          contador_cursos++;
                  
                    }
                   
                    break;
                        case 2:
                    if (!aux_curso.isEstado())
                    {
                        info[contador_cursos][0]=""+(1+contador_cursos);
                        info[contador_cursos][1]=aux_estudiante.getCarnet();
                        info[contador_cursos][2]=aux_estudiante.getNombre();
                             info[contador_cursos][3]=""+aux_curso.getNombre();
                        info[contador_cursos][4]=""+aux_curso.getNota();
                        info[contador_cursos][5]="Reprobado";
                        contador_cursos++;
                            
                    }
                            //reprobado
                      
                    break;
                        case 3:
                        info[contador_cursos][0]=""+(1+contador_cursos);
                        info[contador_cursos][1]=aux_estudiante.getCarnet();
                        info[contador_cursos][2]=aux_estudiante.getNombre();
                             info[contador_cursos][3]=""+aux_curso.getNombre();
                        info[contador_cursos][4]=""+aux_curso.getNota();
                        String estado_3;    
                        if (aux_curso.isEstado()) 
                            {estado_3="Aprobado";}
                        else{estado_3="Reprobado";}
                        info[contador_cursos][5]=estado_3;
                     contador_cursos++;
                           
                    break;
                 
                            }
            
            
            
            aux_curso=aux_curso.siguiente;
        } while (aux_curso!=semestre_actual.primer_curso&&semestre_actual.primer_curso!=semestre_actual.ultimo_curso);
        
    
    }
    
    
}
private void tabla_llena()
{
 
        
        //System.out.println(contador_cursos);
String datos[][]=new String [contador_cursos][7];

    for (int i = 0; i < contador_cursos; i++)
    {
       datos[i][0]=info[i][0];
       datos[i][1]=info[i][1];
       datos[i][2]=info[i][2];
       datos[i][3]=info[i][3];
       datos[i][4]=info[i][4];
       datos[i][5]=info[i][5];
       datos[i][6]=info[i][6];
    }
    
      String tituloo[] = {"No.", "Carnet", "Nombre", "Curso","Nota", "Estado"};
    tabla_1=new DefaultTableModel(datos, tituloo)
                 
          {
            @Override
            public boolean isCellEditable(int filas, int columna) {
                if (columna >= 0) {
                    return false;
                }
                return super.isCellEditable(filas, columna);
            }
        };this.tabla.setModel(tabla_1);
    
    
    
    
    
    
    
 


}
}